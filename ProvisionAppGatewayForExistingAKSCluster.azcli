# Used Jessica Deen's blogpost and AGIC guide and made minor modifications
resourceGroup=Admin-CentralUS-RG
k8sVnet=Azure-CentralUS-VNet
appgwName=AppGateway-CentralUS
appgwPublicIpName=AppGateway-CentralUS-IPAddress
location="centralus"
adminCentralUSRG=Admin-CentralUS-RG
appgwsubnet=AppGateway-CentralUS-SubNet
aadappGW=AKSTheRightWay-CentralUS-agentpool
aksNodePoolResourceGroup=AKSTheRightWayNodePool-CentralUS-RG

# Create the application gateway
az network application-gateway create \
  --name $appgwName \
  --location $location \
  --resource-group $resourceGroup \
  --vnet-name $k8sVnet \
  --subnet $appgwsubnet \
  --capacity 1 \
  --sku WAF_v2 \
  --http-settings-cookie-based-affinity Disabled \
  --frontend-port 80 \
  --http-settings-port 80 \
  --http-settings-protocol Http \
  --public-ip-address $appgwPublicIpName

# enable firewall mode detection
# need to update to network application-gateway waf-policy in future
az network application-gateway waf-config set \
    -g $resourceGroup \
    --gateway-name $appgwName \
    --enabled true \
    --firewall-mode Detection \
    --rule-set-version 3.0

# Create http probe
az network application-gateway probe create \
    -g $resourceGroup \
    --gateway-name $appgwName \
    -n defaultprobe-Http \
    --protocol http \
    --host 127.0.0.1 \
    --timeout 30 \
    --path /

# Create https probe
az network application-gateway probe create \
    -g $resourceGroup \
    --gateway-name $appgwName \
    -n defaultprobe-Https \
    --protocol https \
    --host 127.0.0.1 \
    --timeout 30 \
    --path /

# Link http probe to application gateway
az network application-gateway http-settings update \
    -g $resourceGroup \
    --gateway-name $appgwName \
    -n appGatewayBackendHttpSettings \
    --probe defaultprobe-Http

# Install AAD Pod Identity to your cluster; installs Kubernetes CRDs: AzureIdentity, AzureAssignedIdentity, AzureIdentityBinding
## Be sure to switch to K8s cluster
kubectl create -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment-rbac.yaml

    
# capture clientId in variable
clientId=$(az identity show \
    -g $aksNodePoolResourceGroup \
    -n $aadappGW \
    --query 'clientId' \
    -o tsv)

# capture appgwId in variable
appgwId=$(az network application-gateway list --resource-group $resourceGroup --query '[].id' -o tsv)

# capture appgw resource group id in variable
appgwrgId=$(az group show -g $resourceGroup --query 'id' -o tsv)

az role assignment create \
    --role Contributor \
    --assignee $clientId \
    --scope $appgwId

az role assignment create \
    --role Reader \
    --assignee $clientId \
    --scope $appgwrgId

# capture necessary variables for helm config
applicationGatewayName=$(az network application-gateway list --resource-group $resourceGroup --query '[].name' -o tsv)
subscriptionId=$(az account show --query 'id' -o tsv)
identityClientId=$(az identity show -g $aksNodePoolResourceGroup -n $aadappGW --query 'clientId' -o tsv)
identityResourceId=$(az identity show -g $aksNodePoolResourceGroup -n $aadappGW --query 'id' -o tsv)

# download helm-config
# wget https://raw.githubusercontent.com/Azure/application-gateway-kubernetes-ingress/master/docs/examples/sample-helm-config.yaml -O helm-config.yaml

### Optional tip - open helm-config.yaml and edit line 47 if using an RBAC enabled cluster

# add app gateway ingress helm chart repo and update repo
helm repo add application-gateway-kubernetes-ingress https://appgwingress.blob.core.windows.net/ingress-azure-helm-package/
helm repo update

# install appgw ingress using helm chart and helm-config.yaml
helm upgrade --install appgw-ingress-azure -f helm-config.yaml application-gateway-kubernetes-ingress/ingress-azure

# helm uninstall appgw-ingress-azure
